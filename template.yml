AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Create a Lambda to do a periodic HTTP GET and put the result in a SQS
Parameters:
  functionName:
    Description: The name of the lambda function
    Type: String
    MinLength: 1
    MaxLength: 50
  timePeriodValue:
    Description: "The time period of the scheduled event (without unit)"
    Type: Number
    MinValue: 1
    MaxValue: 255
  timePeriodUnit:
    Description: "The unit for the time period of the scheduled event, e.g. 'minute'"
    Type: String
    MinLength: 1
    MaxLength: 50
  queueARN:
    Description: The ARN of the SQS queue
    Type: String
    MinLength: 1
    MaxLength: 200
  timeout:
    Description: Timeout in seconds for the lambda
    Type: Number
    MinValue: 1
    Default: 10

Resources:

  accessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow lambda to write to SQS
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 'sqs:SendMessage'
            Resource: !Ref queueARN

  function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Ref: functionName
      Architectures:
        - x86_64
      MemorySize: 128
      PackageType: Zip
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      CodeUri: function
      Description: Do a periodic HTTP GET and put the result in a SQS
      Timeout: !Ref timeout
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - !Ref accessPolicy
      Layers:
        - Ref: libs
      Events:
        ScheduledEvent:
          Type: ScheduleV2
          Description: Repeating trigger for the Lambda
          Properties:
            State: DISABLED
            RetryPolicy:
              MaximumRetryAttempts: 2
              MaximumEventAgeInSeconds: 240
            ScheduleExpression:
              !Join
              - ''
              - - 'rate('
                - !Ref timePeriodValue
                - ' '
                - !Ref timePeriodUnit
                - ')'
            Name:
              !Join
              - '-'
              - - !Ref functionName
                - 'schedule'
      EventInvokeConfig:
        # This applies to async invocations only
        MaximumEventAgeInSeconds: 240
        MaximumRetryAttempts: 2
        DestinationConfig:
          OnSuccess:
            Type: SQS
            Destination: !Ref queueARN

  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      # Form a layer name like <function name>-layer
      LayerName:
        !Join
        - '-'
        - - !Ref functionName
          - 'layer'
      Description: Python packages used by the lambda.
      ContentUri: package
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.10
